// Generated by CoffeeScript 1.2.1-pre
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['api.config'], function(API) {
    var Item;
    return Item = (function(_super) {

      __extends(Item, _super);

      Item.name = 'Item';

      function Item() {
        this.setText = __bind(this.setText, this);

        this.toggleDone = __bind(this.toggleDone, this);
        return Item.__super__.constructor.apply(this, arguments);
      }

      Item.prototype.urlRoot = API.URL;

      Item.prototype.defaults = {
        content: "Holy DOM Manipulation!",
        done: false
      };

      Item.prototype.toggleDone = function() {
        this.set({
          done: !this.get("done")
        });
        return this.save();
      };

      Item.prototype.setText = function(text) {
        this.set({
          content: text
        });
        return this.save();
      };

      Item.prototype.validate = function(attrs) {
        if (attrs.content === null || attrs.content === "") {
          return "Item content can't be blank";
        }
        if (attrs.done !== false || attrs.done !== true) {
          return "Item done state must be false or true";
        }
      };

      return Item;

    })(Backbone.Model);
  });

}).call(this);
