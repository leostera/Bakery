// Generated by CoffeeScript 1.2.1-pre
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['collections/List', 'views/Item'], function(List, ItemView) {
    var ListView;
    ListView = (function(_super) {

      __extends(ListView, _super);

      ListView.name = 'ListView';

      function ListView() {
        this.appendItem = __bind(this.appendItem, this);

        this.createOnEnter = __bind(this.createOnEnter, this);

        this.render = __bind(this.render, this);
        return ListView.__super__.constructor.apply(this, arguments);
      }

      ListView.prototype.el = $('body');

      ListView.prototype.initialize = function() {
        this.collection = new List;
        this.collection.fetch({
          add: true
        });
        this.collection.bind('add', this.appendItem);
        this.input = $('.new-todo');
        return this.render();
      };

      ListView.prototype.render = function() {
        $(this.el).html("<div id=\"create-todo\">\n    <input class=\"new-todo\" placeholder=\"What needs to be done?\" type=\"text\" />\n  </div>\n  <ul>\n  </ul>");
        return console.log("Implement templating.");
      };

      ListView.prototype.createOnEnter = function(e) {
        if (e.keyCode === 13) {
          if ($('.new-todo').val() === "" || $('.new-todo').val() === null) {
            return console.log("Tried to create blank item.");
          }
          this.collection.create({
            done: false,
            content: $('.new-todo').val()
          });
          $('.new-todo').val('');
        }
        return this;
      };

      ListView.prototype.appendItem = function(item) {
        var item_view;
        item_view = new ItemView;
        item_view.model = item;
        return $('ul').append(item_view.render().el);
      };

      ListView.prototype.events = {
        'keypress .new-todo': 'createOnEnter'
      };

      return ListView;

    })(Backbone.View);
    return new ListView;
  });

}).call(this);
